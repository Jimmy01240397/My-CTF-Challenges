import socket
import sys
import time
from scapy.all import *
import threading

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

s.connect((sys.argv[1], int(sys.argv[2])))
data = s.recv(1500)
pkt = IP(data)

lip = pkt.dst
rip = pkt.src
sport = 20000
dport = 80

def recvlen(length):
    data = b''
    while length > 0:
        tmp = s.recv(length)
        data += tmp
        length -= len(tmp)
    return data
    
pkt = (IP(src=lip, dst=rip) / TCP(sport=sport, dport=dport, flags="S", seq=100))
s.send(raw(pkt))

while True:
    data = recvlen(20)
    pkt = IP(data)
    length = pkt.len
    datalen = length - 20
    data += recvlen(datalen)
    pkt = IP(data)
    if TCP in pkt:
        seq = pkt.ack
        ack = pkt.seq + 1
        print("get syn ack", seq, ack)
        break

pkt = (IP(src=lip, dst=rip) / TCP(sport=sport, dport=dport, flags="A", seq=seq, ack=ack))
s.send(raw(pkt))

pkt = (IP(src=lip, dst=rip) / TCP(sport=sport, dport=dport, flags="PA", seq=seq, ack=ack)) / b"GET / HTTP/1.1\r\nHost: localhost\r\n\r\n"
s.send(raw(pkt))

while True:
    data = recvlen(20)
    pkt = IP(data)
    length = pkt.len
    datalen = length - 20
    data += recvlen(datalen)
    pkt = IP(data)
    if TCP in pkt and pkt[TCP].flags == "PA":
        print(pkt[Raw].load.decode())



